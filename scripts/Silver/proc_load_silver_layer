
----------------------Insert Silver query -------------------------------------

CREATE OR ALTER PROCEDURE silver.load_silver AS
BEGIN
  DECLARE @start_time DATETIME, @end_time DATETIME, @batch_start_time DATETIME,@batch_end_time DATETIME;
	BEGIN TRY
		PRINT '=================================';
		PRINT 'Loading silver layer :';
		PRINT '=================================';

		PRINT '=================================';
        PRINT 'Loading CRM tables'
		PRINT '=================================';

	--INSERT data into silver crm_cust_info
	--remove duplicate primary key
	--remove unwanted spaces
	--standardize gndr and marital status data
	--Get the time when we start loading
	SET @start_time = GETDATE();
	PRINT 'TRUNCATING TABLE : crm_cust_info';

	print '>> Truncating Table: silver.crm_cust_info'
	TRUNCATE TABLE silver.crm_cust_info;
	print '>> Inserting data into :silver_crm_cust_info';
	INSERT INTO silver.crm_cust_info(
	cst_id,
	cst_key,
	cst_firstname,
	cst_lastname,
	cst_marital_status,
	cst_gndr,
	cst_create_date
	)
	SELECT
	cst_id,
	cst_key,
	TRIM(cst_firstname) AS cst_firstname,
	TRIm(cst_lastname) AS cst_lastname,
	CASE WHEN UPPER(TRIM(cst_material_status)) ='S' THEN 'Single'
		 WHEN UPPER(TRIM(cst_material_status)) ='M' THEN 'Married'
		 ELSE 'n/a'
	end cst_material_status,
	CASE WHEN UPPER(TRIM(cst_gndr)) ='F' THEN 'Female'
		 WHEN UPPER(TRIM(cst_gndr)) ='M' THEN 'Male'
		 ELSE 'n/a'
	end cst_gndr,
	cst_create_date
	from bronze.crm_cust_info

	SET @end_time=GETDATE();
		PRINT 'Load duration :' + CAST(DATEDIFF(second,@start_time,@end_time) AS NVARCHAR) + 'seconds';
		PRINT '=========>'


	--insert data in silver layer
	--data enrichement
	--convert null values to 0
	-- data casting
	--Get the time when we start loading
	SET @start_time = GETDATE();
	print '>> Truncating Table: silver.crm_prd_info'
	TRUNCATE TABLE silver.crm_prd_info;
	print '>> Inserting data into :silver_crm_prd_info';
	INSERT INTO silver.crm_prd_info(
	prd_id,
	prd_key,
	cat_id,
	prd_nm,
	prd_cost,
	prd_line,
	prd_start_dt,
	prd_end_dt
	)
	select 
	prd_id,
	REPLACE(SUBSTRING(prd_key,1,5),'-','_') as cat_id, --extract category id
	SUBSTRING(prd_key,7,len(prd_key)) as prd_key,-- extract product key
	prd_nm,
	ISNULL(prd_cost,0) as prd_cost,
	CASE WHEN UPPER(TRIM(prd_line))='M' THEN 'Mountain'
		 WHEN UPPER(TRIM(prd_line))='R' THEN 'Road'
		 WHEN UPPER(TRIM(prd_line))='S' THEN 'Other Sales'
		 WHEN UPPER(TRIM(prd_line))='T' THEN 'Touring'
		 ELSE 'n/a'
	END AS prd_line,   --Map product line codes to descriptive values
	CAST(
	prd_start_dt AS DATE) 
	AS prd_start_dt,
	CAST(
	Lead(prd_start_dt) OVER (PARTITION BY prd_key ORDER BY prd_start_dt) -1 
	AS DATE
	) 
	AS prd_end_dt -- calculate end date as one day before next start date
	from 
	bronze.crm_prd_info
	
	SET @end_time=GETDATE();
	--Calculate loading duration 
	PRINT 'Load duration :' + CAST(DATEDIFF(second,@start_time,@end_time) AS NVARCHAR) + 'seconds';


	--Get the time when we start loading
	SET @start_time = GETDATE();
	--Insert clean data into silver layer sales_details
	print '>> Truncating Table: silver.crm_sales_details'
	TRUNCATE TABLE silver.crm_sales_details;
	print '>> Inserting data into :silver_crm_sales_details';
	INSERT INTO silver.crm_sales_details(
	sls_ord_num,
	sls_prd_key,
	sls_cust_id,
	sls_order_dt,
	sls_ship_dt,
	sls_due_dt,
	sls_sales,
	sls_quantity,
	sls_price
	)
	SELECT 
	sls_ord_num,
	sls_prd_key,
	sls_cust_id,
	CASE WHEN sls_order_dt = 0 OR LEN(sls_order_dt) != 8 
		 Then NULL
		 ELSE CAST(CAST(sls_order_dt AS VARCHAR) AS DATE)
	END AS sls_order_dt,
	CASE WHEN sls_ship_dt = 0 OR LEN(sls_ship_dt) != 8 
		 Then NULL
		 ELSE CAST(CAST(sls_ship_dt AS VARCHAR) AS DATE)
	END AS sls_ship_dt,
	CASE WHEN sls_due_dt = 0 OR LEN(sls_due_dt) != 8 
		 Then NULL
		 ELSE CAST(CAST(sls_due_dt AS VARCHAR) AS DATE)
	END AS sls_due_dt,
	CASE WHEN sls_sales IS NULL OR sls_sales <=0 or sls_sales != sls_quantity * ABS(sls_price)
				THEN sls_quantity * ABS(sls_price)
				ELSE sls_sales
	END AS sls_sales,
	sls_quantity,
	CASE WHEN sls_price IS NULL OR sls_price <=  0
			  THEN sls_sales / NULLIF(sls_quantity,0)
			  ELSE sls_price
	END AS sls_price
	from bronze.crm_sales_details
	
	SET @end_time=GETDATE();
	--Calculate loading duration 
	PRINT 'Load duration :' + CAST(DATEDIFF(second,@start_time,@end_time) AS NVARCHAR) + 'seconds';
  END TRY

  BEGIN CATCH

	PRINT '==========================='
	PRINT 'ERROR MESSAGE'+ ERROR_MESSAGE();
	PRINT 'ERROR MESSAGE'+ CAST (ERROR_NUMBER() AS NVARCHAR);
	PRINT 'ERROR MESSAGE'+ CAST (ERROR_STATE() AS NVARCHAR);

  END CATCH
  

END

EXEC silver.load_silver
